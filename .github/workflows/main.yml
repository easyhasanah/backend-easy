name: Python Flask App Deployment

on:
  push:
    branches: [ "workflow" ]
  pull_request:
    branches: [ "workflow" ]

jobs:
  build-and-deploy:
    runs-on: [self-hosted, Linux, X64]

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up Python 3.x (di runner - mungkin tidak terlalu diperlukan untuk deployment server ini)
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install dependencies (di runner - untuk keperluan workflow)
      run: |
        echo "Installing dependencies in runner (untuk workflow internal)..."
        python -m pip install --upgrade pip
        pip install -r requirements.txt # Mungkin diperlukan untuk langkah workflow selanjutnya
        whoami

    - name: Run Flask app (di runner - untuk testing sederhana)
      run: |
        echo "Running Flask app in runner (for basic testing)..."
        python run.py &
        sleep 5
        curl http://192.168.23.50:5000 || true # Tambahkan || true agar langkah tidak gagal jika curl gagal
        PROCESS_ID=$(pgrep -f "python run.py")
        if [ -n "$PROCESS_ID" ]; then
          echo "Flask app process is running (PID: $PROCESS_ID)"
        else
          echo "Flask app process is not running"
          # exit 1 # Jangan di exit jika ini hanya testing
        fi
        pkill -f run.py || true

    - name: Stop existing Flask process on server
      run: |
        echo "Stopping existing Flask process on server (if any)..."
        pkill -f "python3 /home/kelompok2/backend3/run.py" || true
        sleep 5 # Beri waktu sebentar untuk proses benar-benar berhenti

    - name: Adjust directory permissions
      run: |
        echo "Adjusting permissions for /home/kelompok2/backend3/..."
        ls -ld /home/kelompok2/backend3/
        sudo chown -R kelompok2:kelompok2 /home/kelompok2/backend3/ # Gunakan sudo jika perlu
        sudo chmod -R 755 /home/kelompok2/backend3/ # Gunakan sudo jika perlu

    - name: Deploy to production directory
      run: |
        echo "Deploying to production directory..."
        rm -rf /home/kelompok2/backend3/*
        sleep 2
        cp -r . /home/kelompok2/backend3/

    - name: Set up virtual environment on server
      run: |
        echo "Setting up virtual environment on server..."
        if [ ! -d "/home/kelompok2/backend3/venv" ]; then
          python3 -m venv /home/kelompok2/backend3/venv
        else
          echo "Virtual environment already exists."
        fi

    - name: Install dependencies (on server)
      run: |
        echo "Installing dependencies on server (in venv)..."
        source /home/kelompok2/backend3/venv/bin/activate
        pip install --upgrade pip
        pip install -r /home/kelompok2/backend3/requirements.txt

    - name: Start Flask app using nohup (on server)
      run: |
        echo "Starting Flask app on server (in venv)..."
        source /home/kelompok2/backend3/venv/bin/activate
        nohup python /home/kelompok2/backend3/run.py > /home/kelompok2/backend3/flask.log 2>&1 &
        sleep 2
        curl http://192.168.23.50:5000 || true
        echo "Flask app started in the background on /home/kelompok2/backend3/"

    - name: Show Flask log (optional - jika ada kegagalan)
      if: failure()
      run: |
        echo "--- Flask Log (last 50 lines from server) ---"
        tail -n 50 /home/kelompok2/backend3/flask.log || true
