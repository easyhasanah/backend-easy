name: Python Flask App

on:
  push:
    branches: [ "workflow" ]
  pull_request:
    branches: [ "workflow" ]

jobs:
  build-and-deploy:
    runs-on: [self-hosted, Linux, X64]

    steps:
    - name: Whoami
      run: whoami
      
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up Python 3.x
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install dependencies (in runner)
      run: |
        echo "Installing dependencies in runner..."
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Flask app (in runner - for testing)
      run: |
        echo "Running Flask app in runner (for testing)..."
        python run.py &
        sleep 10
        PROCESS_ID=$(pgrep -f "python run.py")
        if [ -n "$PROCESS_ID" ]; then
          echo "Flask app process is running (PID: $PROCESS_ID)"
        else
          echo "Flask app process is not running"
          exit 1
        fi
        pkill -f run.py

    - name: Deploy to production directory
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP_OR_HOSTNAME }}  # Ganti dengan IP atau hostname server Anda
        username: ${{ secrets.SERVER_USERNAME }}  # Ganti dengan nama pengguna di server Anda
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Deploying to production directory..."
          rm -rf /var/www/backend/*
          mkdir -p /var/www/backend/
          rsync -avz --delete . /var/www/backend/
          echo "Deployment complete."

    - name: Install dependencies (on server)
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP_OR_HOSTNAME }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Installing dependencies on server..."
          python3 -m venv /var/www/backend/venv
          /var/www/backend/venv/bin/pip install -r /var/www/backend/requirements.txt

    - name: Stop existing Flask process (if any)
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP_OR_HOSTNAME }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Stopping existing Flask process on server (if any)..."
          pkill -f "python3 /var/www/backend/run.py" || true

    - name: Start Flask app using nohup (on server)
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP_OR_HOSTNAME }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Starting Flask app on server..."
          nohup /var/www/backend/venv/bin/python3 /var/www/backend/run.py > /var/www/backend/flask.log 2>&1 &
          echo "Flask app started in the background on /var/www/backend/"

    - name: Wait and check if Flask app is running (on server)
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP_OR_HOSTNAME }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Checking if Flask app is running on server..."
          sleep 10
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.SERVER_IP_OR_HOSTNAME }}:5000)
          if [ "$STATUS" -eq 200 ]; then
            echo "Flask app is running successfully on server (HTTP 200)"
          else
            echo "Failed to start Flask app on server (HTTP Status: $STATUS)"
            cat /var/www/backend/flask.log
            exit 1
          fi

    - name: Show Flask log (optional)
      if: failure()
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP_OR_HOSTNAME }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "--- Flask Log (last 50 lines from server) ---"
          tail -n 50 /var/www/backend/flask.log || true
