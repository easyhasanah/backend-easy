name: Python Flask App

on:
  push:
    branches: [ "workflow" ]
  pull_request:
    branches: [ "workflow" ]

jobs:
  build-and-deploy:
    runs-on: [self-hosted, Linux, X64]

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up Python 3.x
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install dependencies (in runner)
      run: |
        echo "Installing dependencies in runner..."
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        whoami

    - name: Run Flask app (in runner - for testing)
      run: |
        echo "Running Flask app in runner (for testing)..."
        python run.py &
        sleep 10
        PROCESS_ID=$(pgrep -f "python run.py")
        if [ -n "$PROCESS_ID" ]; then
          echo "Flask app process is running (PID: $PROCESS_ID)"
        else
          echo "Flask app process is not running"
          exit 1
        fi
        pkill -f run.py


    - name: Deploy to production directory
      run: |
        echo "Deploying to production directory..."
        rm -rf /home/kelompok2/backend/* # Hapus isi direktori
        mkdir -p /home/kelompok2/backend1/
        cp -r . /home/kelompok2/backend1/

    - name: Install dependencies (on server)
      run: |
        echo "Installing dependencies on server..."
        python3 -m venv /home/kelompok2/backend1/venv
        /home/kelompok2/backend1/venv/bin/pip install -r /home/kelompok2/backend/requirements.txt

    - name: Stop existing Flask process (if any)
      run: |
        echo "Stopping existing Flask process on server (if any)..."
        pkill -f "python3 /home/kelompok2/backend/run.py" || true

    - name: Start Flask app using nohup (on server)
      run: |
        echo "Starting Flask app on server..."
        nohup /home/kelompok2/backend1/venv/bin/python3 /home/kelompok2/backend/run.py > /home/kelompok2/backend/flask.log 2>&1 &
        echo "Flask app started in the background on /home/kelompok2/backend/"

    - name: Run Flask app (in runner - for testing)
      run: |
        echo "Running Flask app in runner (for testing)..."
        
        PROCESS_ID=$(pgrep -f "python run.py")
        if [ -n "$PROCESS_ID" ]; then
          echo "Flask app process is running (PID: $PROCESS_ID)"
        else
          echo "Flask app process is not running"
          exit 1
        fi

        
    - name: Show Flask log (optional)
      if: failure()
      run: |
        echo "--- Flask Log (last 50 lines from server) ---"
        tail -n 50 /home/kelompok2/backend1/flask.log || true
